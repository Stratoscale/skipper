name: build

on:
  push:
    branches:
      - master
      - upstream
  pull_request:
    branches:
      - upstream
      - master

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v1
    - name: Set up Python 3.x
      uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        pip install --user strato-skipper
        mkdir -p ~/.docker
        echo "{}" > ~/.docker/config.json
        touch ${HOME}/.gitconfig
        echo "::add-path::$HOME/.local/bin"
    - name: test
      run: |
        skipper make all

  test-user-install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '2.x', '3.x']
    steps:
    - name: Check out code
      uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test install
      run: |
        mkdir -p ~/.docker
        echo "{}" > ~/.docker/config.json
        pip install --user .
        echo "::add-path::$HOME/.local/bin"
    - name: Test usage
      run: |
        skipper make clean

  test-root-install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '2.x', '3.x']
    steps:
    - name: Check out code
      uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test install
      run: |
        mkdir -p ~/.docker
        echo "{}" > ~/.docker/config.json
        sudo pip install .
        echo "::add-path::$HOME/.local/bin"
    - name: Test usage
      run: |
        skipper make clean

